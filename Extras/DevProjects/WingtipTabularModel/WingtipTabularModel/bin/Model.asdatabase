{
  "name": "SemanticModel",
  "compatibilityLevel": 1200,
  "model": {
    "culture": "en-US",
    "dataSources": [
      {
        "name": "Wingtip Sales DB - Operations",
        "connectionString": "Provider=SQLNCLI11;Data Source=.;Integrated Security=SSPI;Persist Security Info=false;Initial Catalog=WingtipSalesDB",
        "impersonationMode": "impersonateAccount",
        "account": "Student",
        "annotations": [
          {
            "name": "ConnectionEditUISource",
            "value": "SqlServer"
          }
        ]
      }

    ],
    "tables": [
      {
        "name": "Products",
        "columns": [
          {
            "name": "ProductId",
            "dataType": "int64",
            "isHidden": true,
            "isKey": true,
            "sourceColumn": "ProductId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "Category",
            "dataType": "string",
            "sourceColumn": "Category",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Subcategory",
            "dataType": "string",
            "sourceColumn": "Subcategory",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Product",
            "dataType": "string",
            "sourceColumn": "Product",
            "sourceProviderType": "WChar",
            "isDefaultLabel": true
          },
          {
            "name": "Product Image",
            "dataType": "string",
            "sourceColumn": "ProductImageUrl",
            "sourceProviderType": "WChar",
            "dataCategory": "ImageUrl",
            "isDefaultImage": true
          }
        ],
        "partitions": [
          {
            "name": "Products",
            "dataView": "full",
            "source": {
              "query": " SELECT [dbo].[view_ProductDimension].* FROM [dbo].[view_ProductDimension] ",
              "dataSource": "Wingtip Sales DB - Operations"
            }
          }
        ],
        "measures": [
          {
            "name": "Product Rank",
            "expression": [
              " ",
              "IF( ",
              "  HASONEVALUE(Products[Product]), ",
              "  RANKX( ",
              "    ALL( Products[Subcategory], Products[Product], Products[Product Image] ), ",
              "    CALCULATE( SUM(Sales[SalesAmount]) )",
              "  )",
              ")"
            ]
          },
          {
            "name": "Pct of All Products",
            "expression": [
              " ",
              "DIVIDE(",
              "\tSUM( Sales[SalesAmount] ),",
              "\tCALCULATE(",
              "\t\tSum ( Sales[SalesAmount] ),",
              "\t\tALL( Products[Category], Products[Subcategory], Products[Product] )",
              "\t)",
              ")"
            ],
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "Pct of Product Category",
            "expression": [
              " ",
              "DIVIDE(",
              "\tSUM( Sales[SalesAmount] ),",
              "\tCALCULATE(",
              "\t\tSum ( Sales[SalesAmount] ),",
              "\t\tALL( Products[Subcategory], Products[Product] )",
              "\t)",
              ")"
            ],
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "Pct of Product Subcategory",
            "expression": [
              " ",
              "DIVIDE(",
              "\tSUM( Sales[SalesAmount] ),",
              "\tCALCULATE(",
              "\t\tSum ( Sales[SalesAmount] ),",
              "\t\tALL( Products[Product] )",
              "\t)",
              ")"
            ],
            "formatString": "0.00 %;-0.00 %;0.00 %"
          }
        ],
        "hierarchies": [
          {
            "name": "Product Category",
            "levels": [
              {
                "name": "Category",
                "ordinal": 0,
                "column": "Category"
              },
              {
                "name": "Subcategory",
                "ordinal": 1,
                "column": "Subcategory"
              },
              {
                "name": "Product",
                "ordinal": 2,
                "column": "Product"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [dbo].[view_ProductDimension].* FROM [dbo].[view_ProductDimension] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "view_ProductDimension"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "dbo"
          }
        ]
      },
      {
        "name": "Sales",
        "columns": [
          {
            "name": "Id",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Id",
            "sourceProviderType": "Integer"
          },
          {
            "name": "InvoiceId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "InvoiceId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "ProductId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "ProductId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "CustomerId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CustomerId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PurchaseDate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "InvoiceDate",
            "formatString": "General Date",
            "sourceProviderType": "DBTimeStamp"
          },
          {
            "name": "Quantity",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "Quantity",
            "sourceProviderType": "Integer"
          },
          {
            "name": "SalesAmount",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "SalesAmount",
            "sourceProviderType": "Numeric"
          },
          {
            "name": "ProductCost",
            "dataType": "double",
            "isHidden": true,
            "sourceColumn": "ProductCost",
            "sourceProviderType": "Numeric"
          }
        ],
        "partitions": [
          {
            "name": "Sales",
            "dataView": "full",
            "source": {
              "query": " SELECT [dbo].[view_ProductSalesFacts].* FROM [dbo].[view_ProductSalesFacts] ",
              "dataSource": "Wingtip Sales DB - Operations"
            }
          }
        ],
        "measures": [
          {
            "name": "Sales Revenue",
            "expression": [
              " Sum(Sales[SalesAmount])",
              ""
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Units Sold",
            "expression": " SUM(Sales[Quantity])",
            "formatString": "#,0"
          },
          {
            "name": "Customer Count",
            "expression": " COUNTROWS(Customers)",
            "formatString": "#,0"
          },
          {
            "name": "Sales Revenue QTD",
            "expression": " TOTALQTD( SUM(Sales[SalesAmount]), 'Calendar'[Date])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Sales Revenue YTD",
            "expression": " TOTALYTD( SUM(Sales[SalesAmount]), 'Calendar'[Date])",
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Sales Revenue RT",
            "expression": [
              " ",
              "CALCULATE(",
              "\tSUM(Sales[SalesAmount]),",
              "\tFILTER( ",
              "\t\tALL('Calendar'), ",
              "\t\t'Calendar'[Date] <= MAX('Calendar'[Date]) ",
              "\t)",
              ")"
            ],
            "formatString": "\\$#,0;(\\$#,0);\\$#,0",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"Currency\"><Currency LCID=\"1033\" DisplayName=\"$ English (United States)\" Symbol=\"$\" PositivePattern=\"0\" NegativePattern=\"0\" /></Format>"
              }
            ]
          },
          {
            "name": "Previous Month Is Valid",
            "expression": [
              " ",
              "  FIRSTDATE(PREVIOUSMONTH('Calendar'[Date])) >= FIRSTDATE(ALL(Sales[PurchaseDate]))"
            ],
            "formatString": "\"TRUE\";\"TRUE\";\"FALSE\""
          },
          {
            "name": "Sales Growth PM",
            "expression": [
              " ",
              "IF(",
              "  ( ",
              "    ISFILTERED(Calendar[Month]) && ",
              "    NOT(ISFILTERED(Calendar[Date])) && ",
              "    [Previous Month Is Valid] ",
              "  ), ",
              "  DIVIDE( ",
              "    SUM(Sales[SalesAmount]) -",
              "    CALCULATE(",
              "      SUM(Sales[SalesAmount]),",
              "      PREVIOUSMONTH(Calendar[Date])",
              "    ), ",
              "    CALCULATE(",
              "      SUM(Sales[SalesAmount]),",
              "      PREVIOUSMONTH(Calendar[Date])",
              "    )",
              "  ),",
              "  BLANK()",
              ")"
            ],
            "formatString": "0.00 %;-0.00 %;0.00 %"
          },
          {
            "name": "Sales Growth KPI",
            "expression": [
              " ",
              "IF(",
              "  ( ",
              "    ISFILTERED(Calendar[Month]) && ",
              "    NOT(ISFILTERED(Calendar[Date])) && ",
              "    [Previous Month Is Valid] ",
              "  ), ",
              "  DIVIDE( ",
              "    SUM(Sales[SalesAmount]) -",
              "    CALCULATE(",
              "      SUM(Sales[SalesAmount]),",
              "      PREVIOUSMONTH(Calendar[Date])",
              "    ), ",
              "    CALCULATE(",
              "      SUM(Sales[SalesAmount]),",
              "      PREVIOUSMONTH(Calendar[Date])",
              "    )",
              "  ),",
              "  BLANK()",
              ")"
            ],
            "kpi": {
              "targetExpression": "0.1",
              "statusGraphic": "Shapes",
              "statusExpression": [
                "var x='Sales'[Sales Growth KPI] return",
                "            if(ISBLANK(x),BLANK(),",
                "                    If(x<0,-1,",
                "\t                If(x<0.1,0,1)",
                "                )",
                "            )",
                "            "
              ],
              "annotations": [
                {
                  "name": "GoalType",
                  "value": "StaticValue"
                },
                {
                  "name": "KpiStatusType",
                  "value": "Linear"
                },
                {
                  "name": "KpiThresholdType",
                  "value": "Absolute"
                },
                {
                  "name": "KpiThresholdOrdering",
                  "value": "Ascending"
                },
                {
                  "name": "KpiThresholdCount",
                  "value": "2"
                },
                {
                  "name": "KpiThreshold_0",
                  "value": "0"
                },
                {
                  "name": "KpiThreshold_1",
                  "value": "0.1"
                }
              ]
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [dbo].[view_ProductSalesFacts].* FROM [dbo].[view_ProductSalesFacts] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "view_ProductSalesFacts"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "dbo"
          }
        ]
      },
      {
        "name": "Purchases",
        "columns": [
          {
            "name": "InvoiceId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "InvoiceId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "PurchaseTypeCode",
            "dataType": "string",
            "isHidden": true,
            "sourceColumn": "Purchase Type",
            "sourceProviderType": "WChar"
          },
          {
            "type": "calculated",
            "name": "Purchase Type",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "SWITCH([PurchaseTypeCode], ",
              "  \"InPerson\",\"Store Purchase\", ",
              "  \"MailOrder\",\"Mail Order Purchase\", ",
              "  \"Online\", \"Online Purchase\"",
              "  )"
            ]
          }
        ],
        "partitions": [
          {
            "name": "Purchases",
            "dataView": "full",
            "source": {
              "query": " SELECT [dbo].[view_PurchaseDimension].* FROM [dbo].[view_PurchaseDimension] ",
              "dataSource": "Wingtip Sales DB - Operations"
            }
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [dbo].[view_PurchaseDimension].* FROM [dbo].[view_PurchaseDimension] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "view_PurchaseDimension"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "dbo"
          }
        ]
      },
      {
        "name": "Customers",
        "columns": [
          {
            "name": "CustomerId",
            "dataType": "int64",
            "isHidden": true,
            "sourceColumn": "CustomerId",
            "sourceProviderType": "Integer"
          },
          {
            "name": "State",
            "dataType": "string",
            "sourceColumn": "State",
            "sourceProviderType": "WChar",
            "dataCategory": "StateOrProvince"
          },
          {
            "name": "City Name",
            "dataType": "string",
            "sourceColumn": "City",
            "sourceProviderType": "WChar"
          },
          {
            "name": "Zipcode",
            "dataType": "string",
            "sourceColumn": "Zipcode",
            "sourceProviderType": "WChar",
            "dataCategory": "PostalCode"
          },
          {
            "name": "Gender Code",
            "dataType": "string",
            "sourceColumn": "Gender",
            "sourceProviderType": "WChar"
          },
          {
            "name": "BirthDate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "BirthDate",
            "formatString": "General Date",
            "sourceProviderType": "DBTimeStamp"
          },
          {
            "name": "FirstPurchaseDate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "FirstPurchaseDate",
            "formatString": "General Date",
            "sourceProviderType": "DBTimeStamp"
          },
          {
            "name": "LastPurchaseDate",
            "dataType": "dateTime",
            "isHidden": true,
            "sourceColumn": "LastPurchaseDate",
            "formatString": "General Date",
            "sourceProviderType": "DBTimeStamp"
          },
          {
            "type": "calculated",
            "name": "Age",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": [
              " Floor( (TODAY()-Customers[BirthDate])/365, 1)",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "Age Group",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              "  SWITCH( TRUE(),",
              "    [Age] >= 65, \"Ages 65 and over\",",
              "    [Age] >= 50, \"Ages 50 TO 65\",",
              "    [Age] >= 40, \"Ages 40 TO 49\",",
              "    [Age] >= 30, \"Ages 30 TO 39\",",
              "    [Age] >= 18, \"Ages 18 TO 23\",",
              "    [Age] < 18, \"Ages under 18\"",
              ")",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "Customer Type",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "IF([FirstPurchaseDate]=[LastPurchaseDate], \"One-time Customer\", \"Repeat Customer\")"
          },
          {
            "type": "calculated",
            "name": "City",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "[City Name] & \", \" & [State]",
            "dataCategory": "City"
          },
          {
            "type": "calculated",
            "name": "State Name",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "RELATED('Sales Regions'[State Name])"
          },
          {
            "type": "calculated",
            "name": "Sales Region",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "RELATED('Sales Regions'[Sales Region])"
          },
          {
            "type": "calculated",
            "name": "Gender",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "Switch([Gender Code], \"F\", \"Female\", \"M\", \"Male\")"
          }
        ],
        "partitions": [
          {
            "name": "view_CustomerDimension",
            "dataView": "full",
            "source": {
              "query": " SELECT [dbo].[view_CustomerDimension].* FROM [dbo].[view_CustomerDimension] ",
              "dataSource": "Wingtip Sales DB - Operations"
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Customer Geography",
            "levels": [
              {
                "name": "Sales Region",
                "ordinal": 0,
                "column": "Sales Region"
              },
              {
                "name": "State",
                "ordinal": 1,
                "column": "State"
              },
              {
                "name": "City",
                "ordinal": 2,
                "column": "City"
              },
              {
                "name": "Zipcode",
                "ordinal": 3,
                "column": "Zipcode"
              }
            ]
          }
        ],
        "annotations": [
          {
            "name": "_TM_ExtProp_QueryDefinition",
            "value": " SELECT [dbo].[view_CustomerDimension].* FROM [dbo].[view_CustomerDimension] "
          },
          {
            "name": "_TM_ExtProp_DbTableName",
            "value": "view_CustomerDimension"
          },
          {
            "name": "_TM_ExtProp_DbSchemaName",
            "value": "dbo"
          }
        ]
      },
      {
        "name": "Sales Regions",
        "isHidden": true,
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "State",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[State]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "State Name",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[State Name]"
          },
          {
            "type": "calculatedTableColumn",
            "name": "Sales Region",
            "dataType": "string",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Sales Region]"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "DATATABLE (",
                "    \"State\", STRING,",
                "    \"State Name\", STRING,",
                "    \"Sales Region\", STRING,",
                "{",
                " { \"AK\", \"Alaska\", \"Western Region\" },",
                " { \"AL\", \"Alabama\", \"Central Region\" },\t",
                " { \"AR\", \"Arkansas\", \"Central Region\" },",
                " { \"AZ\", \"Arizona\", \"Western Region\" },",
                " { \"CA\", \"California\", \"Western Region\" },",
                " { \"CO\", \"Colorado\", \"Western Region\" },",
                " { \"CT\", \"Connecticut\", \"Eastern Region\" },",
                " { \"DE\", \"Delaware\", \"Eastern Region\" },",
                " { \"FL\", \"Florida\", \"Eastern Region\" },",
                " { \"GA\", \"Georgia\", \"Eastern Region\" },",
                " { \"HI\", \"Hawaii\", \"Western Region\" },",
                " { \"IA\", \"Iowa\", \"Central Region\" },",
                " { \"ID\", \"Idaho\", \"Central Region\" },",
                " { \"IL\", \"Illinois\", \"Central Region\" },",
                " { \"IN\", \"Indiana\", \"Central Region\" },",
                " { \"KS\", \"Kansas\", \"Central Region\" },",
                " { \"KY\", \"Kentucky\", \"Central Region\" },",
                " { \"LA\", \"Louisiana\", \"Central Region\" },",
                " { \"MA\", \"Massachusetts\", \"Eastern Region\" },",
                " { \"MD\", \"Maryland\", \"Eastern Region\" },",
                " { \"ME\", \"Maine\", \"Eastern Region\" },",
                " { \"MI\", \"Michigan\", \"Central Region\" }, ",
                " { \"MN\", \"Minnesota\", \"Central Region\" },",
                " { \"MO\", \"Missouri\", \"Central Region\" },",
                " { \"MS\", \"Mississippi\", \"Central Region\" },",
                " { \"MT\", \"Montana\", \"Western Region\" },",
                " { \"NC\", \"North Carolina\", \"Eastern Region\" },",
                " { \"ND\", \"North Dakota\", \"Central Region\" },",
                " { \"NE\", \"Nebraska\", \"Central Region\" },",
                " { \"NH\", \"New Hampshire\", \"Eastern Region\" },",
                " { \"NJ\", \"New Jersey\", \"Eastern Region\" },",
                " { \"NM\", \"New Mexico\", \"Western Region\" },",
                " { \"NV\", \"Nevada\", \"Western Region\" },",
                " { \"NY\", \"New York\", \"Eastern Region\" },",
                " { \"OH\", \"Ohio\", \"Central Region\" },",
                " { \"OK\", \"Oklahoma\", \"Central Region\" },",
                " { \"OR\", \"Oregon\", \"Western Region\" },",
                " { \"PA\", \"Pennsylvania\", \"Eastern Region\" },",
                " { \"RI\", \"Rhode Island\", \"Eastern Region\" },",
                " { \"SC\", \"South Carolina\", \"Eastern Region\" },",
                " { \"SD\", \"South Dakota\", \"Central Region\" },",
                " { \"TN\", \"Tennessee\", \"Central Region\" },",
                " { \"TX\", \"Texas\", \"Central Region\" },",
                " { \"UT\", \"Utah\", \"Western Region\" },",
                " { \"VA\", \"Virginia\", \"Eastern Region\" },",
                " { \"VT\", \"Vermont\", \"Eastern Region\" },",
                " { \"WA\", \"Washington\", \"Western Region\" },",
                " { \"WI\", \"Wisconsin\", \"Central Region\" },",
                " { \"WV\", \"West Virginia\", \"Central Region\" },",
                " { \"WY\", \"Wyoming\", \"Central Region\" }",
                " }",
                ")"
              ]
            }
          }
        ]
      },
      {
        "name": "Calendar",
        "columns": [
          {
            "type": "calculatedTableColumn",
            "name": "Date",
            "dataType": "dateTime",
            "isNameInferred": true,
            "isDataTypeInferred": true,
            "sourceColumn": "[Date]",
            "formatString": "Short Date",
            "annotations": [
              {
                "name": "Format",
                "value": "<Format Format=\"DateTimeShortDatePattern\" />"
              }
            ]
          },
          {
            "type": "calculated",
            "name": "Year",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "expression": "YEAR([Date])",
            "summarizeBy": "none"
          },
          {
            "type": "calculated",
            "name": "Quarter",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "YEAR('Calendar'[Date]) & \"-Q\" & FORMAT('Calendar'[Date], \"q\")"
          },
          {
            "type": "calculated",
            "name": "Month",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": [
              " FORMAT('Calendar'[Date], \"MMM yyyy\")",
              ""
            ],
            "sortByColumn": "MonthSort"
          },
          {
            "type": "calculated",
            "name": "MonthSort",
            "dataType": "string",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": [
              " FORMAT('Calendar'[Date], \"yyyy-MM\")",
              ""
            ]
          },
          {
            "type": "calculated",
            "name": "Month in Year",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": " FORMAT('Calendar'[Date], \"MMM\")",
            "sortByColumn": "MonthInYearSort"
          },
          {
            "type": "calculated",
            "name": "MonthInYearSort",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "MONTH('Calendar'[Date])"
          },
          {
            "type": "calculated",
            "name": "Day in Week",
            "dataType": "string",
            "isDataTypeInferred": true,
            "expression": "FORMAT('Calendar'[Date], \"ddd\")",
            "sortByColumn": "DayInWeekSort"
          },
          {
            "type": "calculated",
            "name": "DayInWeekSort",
            "dataType": "int64",
            "isDataTypeInferred": true,
            "isHidden": true,
            "expression": "WEEKDAY('Calendar'[Date], 2)"
          }
        ],
        "partitions": [
          {
            "name": "CalculatedTable 1",
            "source": {
              "type": "calculated",
              "expression": [
                "",
                "  CALENDAR(",
                "    DATE( YEAR( MIN(Sales[PurchaseDate]) ), 1, 1),",
                "    Date( YEAR( MAX(Sales[PurchaseDate]) ), 12, 31)",
                "  )",
                ""
              ]
            }
          }
        ],
        "hierarchies": [
          {
            "name": "Calendar Drilldown",
            "levels": [
              {
                "name": "Year",
                "ordinal": 0,
                "column": "Year"
              },
              {
                "name": "Quarter",
                "ordinal": 1,
                "column": "Quarter"
              },
              {
                "name": "Month",
                "ordinal": 2,
                "column": "Month"
              }
            ]
          }
        ]
      }
    ],
    "relationships": [
      {
        "name": "b2a4194e-341b-4e92-9e50-bdcf32672dac",
        "fromTable": "Sales",
        "fromColumn": "InvoiceId",
        "toTable": "Purchases",
        "toColumn": "InvoiceId"
      },
      {
        "name": "5190550f-efd2-41fb-9e32-87e3e4d6464e",
        "fromTable": "Sales",
        "fromColumn": "ProductId",
        "toTable": "Products",
        "toColumn": "ProductId"
      },
      {
        "name": "84aec82c-4543-4ee9-af27-b653b9012197",
        "fromTable": "Sales",
        "fromColumn": "CustomerId",
        "toTable": "Customers",
        "toColumn": "CustomerId"
      },
      {
        "name": "33c3ca53-c8b5-4e57-953f-e12b24df572d",
        "fromTable": "Customers",
        "fromColumn": "State",
        "toTable": "Sales Regions",
        "toColumn": "State"
      },
      {
        "name": "e759ff4f-fe26-4376-bd07-c7f36dc2acb4",
        "fromTable": "Sales",
        "fromColumn": "PurchaseDate",
        "toTable": "Calendar",
        "toColumn": "Date"
      }
    ]
  },
  "id": "SemanticModel"
}